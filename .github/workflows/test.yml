name: ML Pipeline CI

on:
  # push:
  #   branches: [ main, master  ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/演習3 --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check day5/演習3
        
    - name: Run data tests
      run: |
        pytest day5/演習3/tests/test_data.py -v
        
    - name: Run model tests
      run: |
        pytest day5/演習3/tests/test_model.py -v

    - name: Run training script and capture accuracy
      id: train_and_capture_accuracy # このステップの出力を他のステップで参照するためのID
      working-directory: ./day5/演習3 # main.py があるディレクトリをワーキングディレクトリに設定
      run: |
        set -e # いずれかのコマンドがエラーになったら、すぐにスクリプトを終了する

        echo "Running main.py to train model and get accuracy..."
        script_output=$(python main.py)
        
        echo "Script output:"
        echo "$script_output"
        
        accuracy_value=$(echo "$script_output" | grep -oP 'accuracy: \K[0-9\.]+')
        
        if [ -z "$accuracy_value" ]; then
          echo "Error: Could not extract accuracy from script output."
          echo "Please ensure 'main.py' prints accuracy in the format 'accuracy: <value>'"
          exit 1
        fi
        
        echo "Extracted accuracy: $accuracy_value"
        # GitHub Actionsのステップ間で値を渡すために $GITHUB_OUTPUT に書き込む
        echo "accuracy=$accuracy_value" >> $GITHUB_OUTPUT

    - name: Check model accuracy threshold
      run: |
        # 前のステップから accuracy の値を取得
        accuracy_value="${{ steps.train_and_capture_accuracy.outputs.accuracy }}"
        
        echo "Model accuracy from script is: $accuracy_value"
        
        if (( $(echo "$accuracy_value < 0.7" | bc -l) )); then
          echo "Error: Model accuracy ($accuracy_value) is below the threshold of 0.7"
          exit 1
        else
          echo "Model accuracy ($accuracy_value) meets the threshold (>= 0.7)"
        fi
